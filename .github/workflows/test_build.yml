name: tests

on: 
  push:
    branches:
      - master
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ 3.9,  "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Temporary fix for 'pip install imageio-ffmpeg'
      # not including the FFMPEG binary on Apple Silicon macs
      # This step can be removed when issue is fixed in imageio-ffmpeg
      # https://github.com/imageio/imageio-ffmpeg/issues/71
      - name: Setup FFmpeg
        if: ${{ runner.os == 'macOS' && runner.arch == 'ARM64' }}
        run: |
          brew update
          brew install ffmpeg
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools tox tox-gh-actions
      
      # this runs the platform-specific tests declared in tox.ini
      - name: Test with tox
        run: tox
        env:
          PLATFORM: ${{ matrix.platform }}

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have put your twine API key in your
    # github secrets (see readme for details)
    needs: [test]
    runs-on: ubuntu-latest

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing on PyPi
      # see https://docs.pypi.org/trusted-publishers/
      id-token: write
      # This permission allows writing releases
      contents: write

    if: contains(github.ref, 'tags')
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools setuptools_scm wheel twine build
    
    - name: build wheels
      run: |
        python -m build
    
    - name: ðŸš¢ Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      #with:
      #  repository-url: https://test.pypi.org/legacy/
    
    - uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        files: './dist/*'